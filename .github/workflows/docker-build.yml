name: Build & Push to container registry
on:
  workflow_call:
    inputs:
      TARGET_FILE:
        description: "Dockerfile to build"
        type: string
        required: false
        default: "Dockerfile"
      TARGET_IMAGE_NAME:
        description: "Docker image name"
        type: string
        required: false
        default: ""

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@8c0edbc76e98fa90f69d9a2c020dcb50019dc325 # v2.2.1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2.1.0
        if: ${{ github.event_name != 'pull_request' }}
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract tag name
        id: tags
        if: ${{ github.event_name == 'release' }}
        run: echo ::set-output name=name::${GITHUB_REF##*/}

      - name: Extract flavor
        id: flavor
        run: if [ "${{ github.event_name }}" = "release" ]; then echo ::set-output name=name::; else echo ::set-output name=name::-dev; fi
      
      - id: string
        uses: ASzc/change-string-case-action@v2
        with:
          string: ${{ github.repository }}

      - name: Generate Docker image metadata
        uses: docker/metadata-action@05d22bf31770de02e20c67c70365453e00227f61 # v4.2.0
        id: img_meta
        with:
          flavor: |
            latest=auto
            suffix=${{ steps.flavor.outputs.name }}
          images: "ghcr.io/${{ inputs.TARGET_IMAGE_NAME || steps.string.outputs.lowercase }}"
          tags: |
            ${{ steps.tags.outputs.name }}
            latest

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@0a97817b6ade9f46837855d676c4cca3a2471fc9 # v4.2.1
        with:
          file: ${{ inputs.TARGET_FILE }}
          context: ./
          tags: ${{ steps.img_meta.outputs.tags }}
          labels: ${{ steps.img_meta.outputs.labels }}
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=gha,mode=max
          cache-to: type=gha,mode=max
          secrets: |
            GITHUB_SHA=${{ github.sha }}
